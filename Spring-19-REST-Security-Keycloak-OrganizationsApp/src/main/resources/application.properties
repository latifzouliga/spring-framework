server.port=8082
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=create
spring.jpa.defer-datasource-initialization=true
spring.jackson.serialization.fail-on-empty-beans=false






#keycloak.realm=cydeo.dev
#keycloak.auth-server-url=http://localhost:8080/auth
#keycloak.ssl-required=external
#keycloak.resource=training
#keycloak.credentials.secret=BBe2h5BeCfQ2QbHEn503Zz7cxuY9kD8H
#keycloak.use-resource-role-mappings=true
#keycloak.bearer-only=true
#spring.main.allow-circular-references=true

## with the bellow information this application will connect to keycloak server
keycloak.realm=My-cydeo-dev
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.ssl-required=external


## client: this application will be secured using training client
keycloak.resource=my-training
## client secret
keycloak.credentials.secret=GPJf5Blm77eDhlNUxZu7R2siJoPd0I3y
## giving the permission to client roles. commenting the below line will give permission to realm roles only
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true
spring.main.allow-circular-references=true